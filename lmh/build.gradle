plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.mysite'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web' // 웹 애플리케이션 개발 (REST API 포함)
	implementation 'jakarta.persistence:jakarta.persistence-api' // JPA 표준 API (엔티티, 어노테이션 등)
	implementation 'org.hibernate.orm:hibernate-core' // Hibernate ORM 구현체 (JPA를 실제로 작동하게 함)
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' // Thymeleaf 템플릿 엔진 사용
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect' // Thymeleaf 레이아웃 확장 기능
	implementation 'jakarta.validation:jakarta.validation-api' // Bean Validation API (예: @NotNull 등)
	implementation 'org.springframework.boot:spring-boot-starter-validation' // Spring Boot에서 Bean Validation 지원
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // Spring Data JPA (ORM, 리포지토리 등)
	// implementation 'org.springframework.boot:spring-boot-starter-security' // 스프링 시큐리티 사용
	// implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6' // 스프링 시큐리티 타임리프 연동 사용
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test' // 테스트 기능 (JUnit, Mockito 등 포함)
	testImplementation 'org.junit.jupiter:junit-jupiter' // JUnit 5 테스트 엔진
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // 테스트 플랫폼 런처 (JUnit 플랫폼 실행용)
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // (중복) 테스트 플랫폼 런처
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools' // 개발 도구 (자동 재시작, LiveReload 등)
	annotationProcessor 'org.projectlombok:lombok' // 롬복을 위한 어노테이션 프로세서
	compileOnly 'org.projectlombok:lombok' // 롬복 - getter/setter 등 코드 자동 생성 (컴파일 시만 필요)
	runtimeOnly 'org.postgresql:postgresql' // PostgreSQL 데이터베이스 드라이버
}

tasks.named('test') {
	useJUnitPlatform()
}
